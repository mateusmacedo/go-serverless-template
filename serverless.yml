service: go-serverless-template

plugins:
  - serverless-localstack
  - serverless-go-plugin

custom:
  localstack:
    stages:
      - local
    autostart: true
    lambda:
      mount_code: true
    debug: true
  go:
    supportedRuntimes: ["provided.al2"]
    buildProvidedRuntimeAsBootstrap: true

provider:
  name: aws
  region: "us-east-1"
  stage: ${opt:stage, 'local'}
  apiName: ${self:service}-${self:provider.stage}
  environment:
    AWS_SNS_HELLO_TOPIC: {"Ref": "HelloTopic"}
    AWS_SQS_HELLO_QUEUE: {"Ref": "HelloQueue"}
    AWS_SQS_HELLO_SECONDARY_QUEUE: {"Ref": "HelloSecondaryQueue"}
    AWS_DYNAMODB_TABLE_NAME: {"Ref": "HelloTable"}
  memorySize: 128
  apiGateway:
    shouldStartNameWithService: true

resources:
  Resources:
    HelloQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-hello-queue

    HelloSecondaryQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-hello-secondary-queue

    HelloTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-${self:provider.stage}-hello-topic
        TopicName: ${self:service}-${self:provider.stage}-hello-topic

    HelloSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: sqs
        TopicArn: {"Ref": "HelloTopic"}
        Endpoint: {"Fn::GetAtt": ["HelloQueue", "Arn"]}

    HelloSecondarySubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: sqs
        TopicArn: {"Ref": "HelloTopic"}
        Endpoint: {"Fn::GetAtt": ["HelloSecondaryQueue", "Arn"]}

    HelloTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:service}-${self:provider.stage}-hello-table

functions:
  helloHttp:
    handler: cmd/hello/http-adapter/main.go
    runtime: provided.al2
    events:
      - http:
          path: hello/{name}
          method: get
          cors: true
          request:
            parameters:
              paths:
                name: true

  helloPrimary:
    handler: cmd/hello/primary-sqs-adapter/main.go
    runtime: provided.al2
    events:
      - sqs:
          arn:
            {"Fn::GetAtt": ["HelloQueue", "Arn"]}

  helloSecondary:
    handler: cmd/hello/secondary-sqs-adapter/main.go
    runtime: provided.al2
    events:
      - sqs:
          arn:
            {"Fn::GetAtt": ["HelloSecondaryQueue", "Arn"]}
